@model List<SRV.ViewModel.EnityDto.CommentDto>

@helper DisplayComment(SRV.ViewModel.EnityDto.CommentDto comment)
{
    <div>
        <small class="text-muted"><span class="fa fa-calendar"></span><span style="margin:0px 5px;">@comment.CommentTime</span></small>
    </div>
    <div class="clearfix" style="margin:10px 0;">
        @comment.Content
    </div>
    @*<div class="commentAppraise pull-right">
            <a href="/Article/Comment/Appraise?id=@comment.Id;" agree=@comment.Appraises.IsAgree.ToString() data-id=@comment.Id.ToString()>
                <span class="fa fa-thumbs-o-up text-success"></span> 支持
                <span>@comment.Appraises.Agree</span>
            </a>
            <a href="/Article/Comment/Appraise?id=@comment.Id" agree=@comment.Appraises.IsAgree.ToString() data-id=@comment.Id.ToString()>
                <span class="fa fa-thumbs-o-down text-success"></span> 反对
                <span>@comment.Appraises.DisAgree</span>
            </a>
        </div>*@
}



@{
    for (int i = 0; i < Model.Count; i++)
    {
        var comment = Model[i];
        if (comment.CommentId == null)
        {
            <div class="clearfix comment" style="margin-top: 10px; border-bottom:1px dashed #ddd;">
                @DisplayComment(Model[i])

                @if (comment.CommentBy.Count != 0)
                {
                    foreach (var item in comment.CommentBy)
                    {
                        <div class="pull-right" style="width: 95%; background-color: aquamarine; float: right; margin-top:3px">
                            @DisplayComment(item)
                        </div>
                    }
                }
            </div>
        }
    }
}

<script>

    //$('.comment').on('click', function (e) {
    //    let agree;
    //    if (e.target.id === 'appraise') { return }
    //    while (e.target.id !== 'appraise') {
    //        if (e.target.id === 'agree') {
    //            agree = true;
    //            let e2 = $(e.target).next().children().last()
    //            appraise(e.target, e2, agree)
    //        }

    //        if (e.target.id === 'disAgree') {
    //            agree = false;
    //            let e2 = $(e.target).prev().children().last();
    //            appraise(e.target, e2, agree)
    //        }
    //        e.target = e.target.parentNode
    //    }

    //})

</script>
