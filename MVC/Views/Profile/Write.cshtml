@model SRV.ViewModel.ProfileModel
@{
    var years = new int?[50];
    var months = new int?[13];
    var constellations = new string[13] { "----", "摩羯座", "水瓶座", "双鱼座", "白羊座", "金牛座", "双子座", "巨蟹座", "狮子座", "处女座", "天平座", "天蝎座", "射手座" };
    years[0] = null; /*months[0] = null;*/
    for (int i = 1; i < 50; i++)
    {
        years[i] = DateTime.Now.AddYears(-(i + 5)).Year;
        if (i < 13)
        {
            months[i] = i;
        }// nothing
    }
}
<div class="dualcolumns-container">
    <div class="page-header">
        <h2>
            <span class="fa fa-user-circle-o " aria-hidden="true"></span> 个人资料
        </h2>
    </div>

    <div class="row">
        <div class="col-lg-5 col-md-6">

            @using (Html.BeginForm("UserIcon", "Profile", FormMethod.Post, new { enctype = "multipart/form-data", target = "frameFile" }))
            {
                <div class="form-group">
                    <label>头像：（* 仅限jpg/png/gif）</label>
                    <div usericon-show>
                        <img src="@Model.Icon" class="img-responsive img-thumbnail" />
                    </div>
                    <iframe id="frameFile" name="frameFile" style="display:none"></iframe>
                    <div class="input-group">
                        <input class="form-control" type="text" file-upload-text file-upload-path placeholder="页面提交时上传文件">
                        <span class="btn input-group-addon file_browser" file-upload-button>浏览</span>
                    </div>

                    <input name="Icon" file-upload-really type="file" class="hide" accept="image/*" />
                    <span class="field-validation-valid" data-valmsg-for="Icon" data-valmsg-replace="true"></span>
                </div>
            }


            @using (Html.BeginForm("Write", "Profile"))
            {
                <div class="form-group">
                    <label>性别：</label>
                    <label class="checkbox-inline">
                        @Html.RadioButtonFor(p => p.IsFemale, true) 男
                    </label>
                    <label class="checkbox-inline">
                        @Html.RadioButtonFor(p => p.IsFemale, false) 女
                    </label>
                </div>
                <div class="form-group">
                    <label>生日：</label>
                    <div class="input-group">
                        @Html.DropDownListFor(p => p.BirthYear, new SelectList(years), new { @class = "form-control valid", style = "width:105%" })
                        <span class="input-group-addon">年</span>
                        @Html.DropDownListFor(p => p.BirthMonth, new SelectList(months), new { @class = "form-control valid" })
                        <span class="input-group-addon">月</span>
                        @Html.DropDownListFor(p => p.Constellation, new SelectList(constellations), new { @class = "form-control valid" })
                        <span class="input-group-addon">星座</span>
                    </div>
                </div>
                <div class="form-group">
                    <label>关键字：（* 使用空格分隔）</label>
                    <div id="Test" keyword-show style="padding-bottom:3px;">
                        @foreach (var item in Model.Keywords)
                        {
                            <span class="badge" style="margin-right:5px;" keyword-new>@item.Content<small keyword-remove style="margin-left:5px;"><span class="fa fa-times"></span>
                                </small>
                            </span>
                        }
                    </div>
                    <div class="input-group" keywords>
                        <div class="input-group-btn">
                            <button type="button" class="btn btn-default ">--- 1级 ---</button>
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="caret"></span>
                                <span class="sr-only">Toggle Dropdown</span>
                            </button>
                            <ul class="dropdown-menu" keyword-dropdownlist="1">
                                @foreach (var item in Model.KeywordsLv1)
                                {
                                    <li style="cursor: pointer "><a data-id="@item.Id">@item.Content</a></li>
                                }
                            </ul>
                        </div>
                        <div class="input-group-btn input-group-btn-middle" keyword-dropdownlist-2="">
                            <button type="button" class="btn btn-default ">--- 2级 ---</button>
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="caret"></span>
                                <span class="sr-only">Toggle Dropdown</span>
                            </button>
                            <ul class="dropdown-menu" keyword-dropdownlist="2"></ul>
                        </div>
                        <input type="text" class="form-control" placeholder="自定义关键字，使用空格分隔" keyword-input="">
                    </div>
                    @Html.HiddenFor(p => p.AllKeywords, new { keyword_submit_value = "" })
                    <span class="field-validation-valid" data-valmsg-for="Keywords" data-valmsg-replace="true"></span>
                </div>
                <div class="form-group">
                    <label>自我介绍：</label>
                    @Html.TextAreaFor(p => p.SelfDescription, new { placeholder = "简单的介绍一下自己吧，不超过255字", @class = "form-control", rows = "5" })
                </div>
                <div class="submit">
                    <input type="submit" class="btn btn-primary loading" value="提交" submit-once>
                </div>
            }

        </div>
    </div>

</div>
<script>
    //同步提交的关键字数据
    $('[submit-once]').on('click', function () {
        let keywords = $.trim($('[keyword-show]').text())
        $('[keyword-submit-value]').val(keywords)
        console.log($('[keyword-submit-value]').val())
    })

    //删除关键字
    $('[keyword-show]').on('click', function (e) {
        e = e.target;
        while (!$('[keyword-show]').is($(e))) {
            if ($(e).is($('[keyword-remove]'))) {
                $(e.parentNode).remove()
                return;
            }
            e = e.parentNode
        }
    })

    //关键字添加
    $('[keywords]').on('click', function (e) {
        e = e.target;
        while (e.className !== 'input-group') {
            if (e.tagName == 'LI') {
                let text = $.trim($(e.firstChild).text())
                let $badge = getBadge($.trim(text));
                console.log($('[keyword-show]').text())
                if ($('[keyword-show]').text().split(/\s+/).indexOf(text) < 0) {
                    $('[keyword-show]').append($badge)
                }
            }
            e = e.parentNode
        }
    })

    function getBadge(text) {
        return $('<span class="badge" style="margin-right:5px;" keyword-new>' + text +
            ' <small keyword-remove style="margin-left:5px;"><span class="fa fa-times"></span></small>' +
            '</span>');
    }

    $("[keyword-dropdownlist]").find("a").click(function () {
        var keywordId = $(this).data("id");
        //二级关键字Ajax加载
        $.ajax({
            url: "/Profile/Keywords/" + keywordId,
            method: "GET",
            success: function (data) {
                var $keywords = $(data);
                //$keywords.find("a").click(makeBadgeByDropdown);
                $("[keyword-dropdownlist=2]")
                    .html("")
                    .append($keywords)
                    .find("li").css("cursor", "pointer")
            }
        })
    })

    //用途：点击游览,打开选择文件框
    $("[file-upload-button]").click(function (e) {
        e.preventDefault();
        console.log($("[file-upload-really]"))
        $("[file-upload-really]").click();
    });

    //用途：选择文件后,改变文本框的显示内容
    $("[file-upload-really]").change(function () {
        //$("[usericon-show]").html('正在上传中……');

        //验证
        //var checkResult = checkUploadPicture(this, 256);
        //if (checkResult !== "") {
        //    showRemind('<span class="fa fa-exclamation-triangle text-warning"></span> ' + checkResult);
        //    return false;
        //}

        $(this).parents("form").submit();
        var $textbox = $("[file-upload-text]");
        $textbox.val(this.value);
        afterFileSelected($textbox);
    });

    //用途：修改图片时隐藏/显示原图片
    $("[file-upload-path]").on("input", function () {
        if ($.trim($(this).val()) === "") {
            var $icon = $("[file-upload-old]");
            if ($icon.length > 0) {
                $icon.show();
            }
            $("[file-upload-really]").val("");
        }
    });
    function afterFileSelected(textbox) {
        var $icon = $("[file-upload-old]");
        if ($icon.length > 0) {
            if ($.trim(textbox.val()) !== "") {
                $icon.hide();
            }
        }
    }
    $("#frameFile").on('load', function () {
        let urlName = $(this)[0].contentDocument.body.textContent;  //从后台传过来的数据，拿到就可以做相应的业务代码了
        if (!!urlName) {
            $('[usericon-show]').html("")
            //if ($('[usericon-show]').children().length>0) {
            //    $('[usericon-show]').html("")
            //}
            $('[usericon-show]').html(`<img src=${urlName}  class="img-responsive img-thumbnail">`)
        }

    })

</script>